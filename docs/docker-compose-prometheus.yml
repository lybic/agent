# Docker Compose configuration for GUI Agents with Prometheus monitoring
#
# This docker-compose file demonstrates how to run the GUI Agents gRPC service
# with Prometheus monitoring and Grafana visualization.
#
# Usage:
#   docker-compose up -d
#
# Access:
#   - GUI Agents gRPC: localhost:50051
#   - Prometheus metrics: http://localhost:8000/metrics
#   - Prometheus UI: http://localhost:9090
#   - Grafana: http://localhost:3000 (admin/admin)

version: '3.8'

services:
  # GUI Agents gRPC Service
  gui-agents:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: gui-agents-service
    ports:
      - "50051:50051"  # gRPC service
      - "8000:8000"    # Prometheus metrics
    environment:
      - ENABLE_PROMETHEUS=true
      - PROMETHEUS_PORT=8000
      - GRPC_PORT=50051
      - TASK_MAX_TASKS=5
      - LOG_LEVEL=INFO
      # Add your Lybic credentials
      # - LYBIC_API_KEY=your_api_key
      # - LYBIC_ORG_ID=your_org_id
    volumes:
      - ./runtime:/app/runtime  # Task logs and runtime data
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:50051"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - gui-agents

  # Grafana visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana-datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
